// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

ext {
    minSdkVersion = 21
    targetSdkVersion = 29
    compileSdkVersion = 29
    versionCode = 1
    versionName = '1.0.0'

    versions = [
            appcompat              : '1.1.0',
            recyclerview           : '1.1.0',
            material               : '1.0.0',
            databinding            : '2.3.3',
            lifecycle              : '2.0.0',
            lifecycle_viewmodel_ktx: '2.1.0',
            room                   : '2.1.0',
            ktx                    : '1.0.0',
            constraint_layout      : '1.1.3',
            coroutines             : '1.2.1',
            retrofit               : '2.6.0',
            okhttp                 : '4.0.0',
            koin                   : '2.0.1',
            play_services_maps     : '16.1.0',
            picasso                : '2.71828',
            timber                 : '4.7.1'
    ]
    libs = [
            kotlin_stdlib          : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            androidx_appcompat     : "androidx.appcompat:appcompat:$versions.appcompat",
            androidx_recyclerview  : "androidx.recyclerview:recyclerview:$versions.recyclerview",
            androidx_material      : "com.google.android.material:material:$versions.material",

            ktx                    : "androidx.core:core-ktx:$versions.ktx",

            //Architecture components
            lifecycle_runtime      : "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle",
            lifecycle_extensions   : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
            lifecycle_viewmodel_ktx: "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_viewmodel_ktx",
            kapt_lifecycle         : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",

            room_runtime           : "androidx.room:room-runtime:$versions.room",
            kapt_room              : "androidx.room:room-compiler:$versions.room",
            room_ktx               : "androidx.room:room-ktx:$versions.room",

            kapt_databinding       : "com.android.databinding:compiler:$versions.databinding",

            constraintlayout       : "androidx.constraintlayout:constraintlayout:$versions.constraint_layout",

            //coroutines
            coroutines_core        : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
            coroutines_android     : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",

            //retrofit, okhttp, moshi
            okhttp                 : "com.squareup.okhttp3:okhttp:$versions.okhttp",
            logging_interceptor    : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp",
            retrofit               : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            moshi                  : "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
            kapt_moshi             : "com.squareup.moshi:moshi-kotlin-codegen:1.8.0",

            // Koin for Android
            koin_android           : "org.koin:koin-android:$versions.koin",
            koin_android_viewmodel : "org.koin:koin-android-viewmodel:$versions.koin",

            picasso                : "com.squareup.picasso:picasso:$versions.picasso",

            timber                 : "com.jakewharton.timber:timber:$versions.timber",

            play_services_maps     : "com.google.android.gms:play-services-maps:$versions.play_services_maps",
    ]
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
